// Code generated by Icestudio 0.2.4-dev
// Sun, 18 Dec 2016 18:38:41 GMT

`default_nettype none

module main (
 input v348220,
 output vf59f0c,
 output ve5b810,
 output v82d849,
 output vf89e19,
 output vea8ca5
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 assign w0 = v348220;
 assign vf59f0c = w1;
 assign ve5b810 = w2;
 assign v82d849 = w3;
 assign vf89e19 = w5;
 assign vea8ca5 = w6;
 assign w2 = w1;
 assign w3 = w1;
 assign w3 = w2;
 assign w4 = w1;
 assign w4 = w2;
 assign w4 = w3;
 assign w6 = w5;
 main_div vde9df3 (
  .vc2955d(w0),
  .v7f1c7e(w1)
 );
 main_logic_gate_not ve3c009 (
  .v0e28cb(w4),
  .vcbab45(w5)
 );
endmodule

module main_div #(
 parameter v554616 = 12000000
) (
 input vc2955d,
 output v7f1c7e
);
 localparam p2 = v554616;
 wire w0;
 wire w1;
 assign w0 = vc2955d;
 assign v7f1c7e = w1;
 main_div_basic_code_v1a123e #(
  .M(p2)
 ) v1a123e (
  .clk_in(w0),
  .clk_out(w1)
 );
endmodule

module main_div_basic_code_v1a123e #(
 parameter M = 0
) (
 input clk_in,
 output clk_out
);
 // Div 12MHz / M
 
 localparam N = $clog2(M);
 
 reg [N-1:0] c = 0;
 
 always @(posedge clk_in)
   c <= (c == M - 1) ? 0 : c + 1;
 
 assign clk_out = c[N-1];
endmodule

module main_logic_gate_not (
 input v0e28cb,
 output vcbab45
);
 wire w0;
 wire w1;
 assign w0 = v0e28cb;
 assign vcbab45 = w1;
 main_logic_gate_not_basic_code_vd54ca1 vd54ca1 (
  .a(w0),
  .c(w1)
 );
endmodule

module main_logic_gate_not_basic_code_vd54ca1 (
 input a,
 output c
);
 // NOT logic gate
 
 assign c = ~ a;
endmodule
